import /recovery.init.${ro.hardware}.rc
import /init.recovery.debug.rc
import /init.watchdog.rc
import /init.partlink.rc

on early-init
    start ueventd

on init
    export PATH /sbin:/system/bin
    export LD_LIBRARY_PATH /system/lib
    export ANDROID_ROOT /system
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc

    mkdir /sdcard
    mkdir /system

    mount /tmp /tmp tmpfs

    start partlink

    chown root shell /tmp
    chmod 0775 /tmp

    write /proc/sys/kernel/panic_on_oops 1
    write /sys/module/intel_mid/parameters/force_cold_boot 1

    # adb shell needs /system/bin/sh
    symlink /system/bin/mksh /system/bin/sh

    # set usb serial number
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}

on fs
     mkdir /dev/usb-ffs 0770 shell shell
     mkdir /dev/usb-ffs/adb 0770 shell shell
     mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000
     write /sys/class/android_usb/android0/f_ffs/aliases adb

on boot

    insmod /lib/prebuild_modules/texfat.ko
    insmod /lib/prebuild_modules/tntfs.ko

    ifup lo
    hostname localhost
    domainname localdomain

    class_start default
    class_start core

    setprop sys.usb.config adb

service ueventd /sbin/ueventd
    critical

service recovery /sbin/recovery

service adbd /sbin/adbd recovery
    disabled

service thermald /sbin/thermald
    class core
    user root

on property:sys.powerctl=reboot,bootloader
    setprop sys.start_apklogfs 1

on property:sys.powerctl=reboot,recovery
    setprop sys.start_apklogfs 1

on property:sys.powerctl=reboot,
    setprop sys.start_apklogfs 1

on property:sys.realpowerctl=1
    powerctl ${sys.powerctl}

on property:sys.start_apklogfs=1
    mkdir /logs
    chown system system /logs
    chmod 777 /logs
    mount_all /fstab.${ro.hardware}
    start apk_logfs

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    start console

on property:ro.debuggable=0
    stop console

on property:service.adb.enable=1
    start adbd

on property:service.adb.enable=0
    stop adbd

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

#one of the following property triggers will enable adb if it is enabled in regular operation

on property:sys.usb.config=adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 8087
    write /sys/class/android_usb/android0/idProduct 09ef
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1

# USB ACM configuration, with rndis and adb
on property:sys.usb.config=rndis,acm,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 8087
    write /sys/class/android_usb/android0/idProduct 09f8
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1

on property:sys.usb.config=mass_storage,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 8087
    write /sys/class/android_usb/android0/idProduct 09f2
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1

on property:sys.usb.config=mtp,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 0x8087
    write /sys/class/android_usb/android0/idProduct 0x09fc
    write /sys/class/android_usb/android0/iProduct "Android-Phone"
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1
    start adbd
    setprop sys.usb.state $sys.usb.config

on property:sys.usb.config=ptp,adb
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 18d1
    write /sys/class/android_usb/android0/idProduct Fec0
    write /sys/class/android_usb/android0/functions $sys.usb.config
    write /sys/class/android_usb/android0/enable 1


service apk_logfs /system/bin/sh /etc/retrieve_aplogs.sh
    disabled

# Add Proxy service for Modem provisionning
service proxy /sbin/proxy -d none -m /dev/ttyIFX0 -p /dev/ttyGS0 -t on
    disabled

on property:service.proxy.enable=1
    setprop sys.usb.config rndis,acm,adb
    start proxy

on property:service.proxy.enable=0
    stop proxy
    setprop sys.usb.config adb
